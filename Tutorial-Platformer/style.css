/*since we named the table background we can just grab it with .background */
.background {
    /*change the background to blue using the rgb values*/
    background: rgb(52, 166, 251);
    /*this makes sure the table doesn't do any kind of resizing so you set it to fixed*/
    table-layout: fixed;
    /*you also don't want any weird spacing so you set the border spacing to 0*/
    border-spacing: 0;

}
/*grab the background table cells*/
.background td {
    /*make sure each cell doesn't have any padding so there isn't any awkward spacing in between cells*/
    padding: 0;
}
/*grab the lava class*/
.lava {
    /*set it's background to red*/
    background: rgb(255,100, 100);
}
/*grab the wall class*/
.wall {
    /*set it's background to white */
    background: white;
}
/*grabs the actor class and sets the position to absolute so the game can tell the exact position at all times */
.actor {
    position: absolute;
}
/*grabs the coin class and sets its background to yellow*/
.coin {
    background: rgb(241,229,89);
}
/*grabs the player class and sets its background to grey*/
.player {
    background: rgb(64, 64, 64);
}

/*since syncState changes the doms class name depending on if the game is lost or won you can grab the class*/
/*the player can only lose if they touch lava so when they do they turn red*/
.lost .player {
    background: rgb(160,64,64);
}
/*if they collect all the coins a little halo appears above their head*/
.won .player{
    box-shadow: -4px, -7px, 8px white, 4px - 7px 8px white;
}

/*the level might not fit in the screen so you need to have it be able to scroll*/
/*grab the game class*/
.game {
    /*set the overflow to hidden so anything outside of the view is hidden*/
    overflow: hidden;
    /*set a max width*/
    max-width: 600px;
    /*set a max hight*/
    max-height: 450px;
    /*set the position to relative so the player is position is relative to the top left corner*/
    position: relative;
}
